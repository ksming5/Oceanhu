有一个X*Y的网格，一个机器人只能走格点且只能向右或向下走，要从左上角走到右下角。
 请设计一个算法，计算机器人有多少种走法
 给定两个正整数int x,int y，请返回机器人的走法数目，保证x＋y小于等于12
import java.util.*;

public class Robot {
    public int countWays(int x, int y) {
        // write code here
        if(x == 1 || y == 1){
             return 1; 
        }
          
		return countWays(x - 1, y)+countWays(x, y - 1);

    }
    private static int solve1(int m, int n){
		int state[][] = new int [m + 1][n + 1];
		//进行初始化
		for(int i = 0; i <= m; i++){
			state[i][1] = 1;
		}
		for(int i = 0; i <= n; i++){
			state[1][i] = 1;
		}
		//从第二行与第二列进行填充
		for(int i = 2; i <= m; i++){
			for(int j = 2; j <= n; j++){
				state[i][j] = state[i - 1][j] + state[i][j - 1];
			}
		}
		return state[m][n];
	}

}